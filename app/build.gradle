apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def keystorePropertiesFile = rootProject.file("keystore.properties")

def keystoreProperties = new Properties()

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

//获取时间戳
static def getDate() {
    def date = new Date()
    def formattedDate = date.format('MMddHHmm')
    return formattedDate
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.liuxe.gaokaoass"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 2
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    signingConfigs {
        signConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            resValue "string", "yxs_app_name", "AI高考志愿"

            signingConfig signingConfigs.signConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            resValue "string", "yxs_app_name", "AI高考志愿-测试"
            applicationIdSuffix ".debug"

            signingConfig signingConfigs.signConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName

            if (variant.buildType.name == 'debug') {
                fileName = "app-v${defaultConfig.versionName}-debug-${getDate()}.apk"
            } else {
                fileName = "app-v${defaultConfig.versionName}-release-${getDate()}.apk"
            }
            outputFileName = fileName
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    //liveData 和 ViewModel 等
    def lifecycle_version = "2.2.0"
    def retrofit2_version = "2.6.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    //请求框架
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    //material
    implementation 'com.google.android.material:material:1.2.0-alpha06'
    //recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    //cardView
    implementation 'androidx.cardview:cardview:1.0.0'

    //沉浸式状态栏：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    //Logcat输出框架：https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'
    //腾讯mmvk 替代shareprefrence
    implementation 'com.tencent:mmkv:1.0.23'

    //刷新框架
    api  'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
    api  'com.scwang.smart:refresh-header-material:2.0.1'    //谷歌刷新头
    api  'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载

    //RecyclerAdapter框架：https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.3'

    //glide
    implementation("com.github.bumptech.glide:glide:4.9.0") {
        exclude group: "com.android.support"
    }

    //Fragment管理库：https://github.com/YoKeyword/Fragmentation
    implementation 'me.yokeyword:fragmentationx:1.0.1'

    implementation 'me.jessyan:autosize:1.1.2'

    implementation 'com.github.zhpanvip:BannerViewPager:3.1.2'

    //视频播放
    implementation 'cn.jzvd:jiaozivideoplayer:7.4.1'
    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.4'

    compile 'com.tencent.bugly:crashreport_upgrade:1.4.2'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    compile 'com.tencent.bugly:nativecrashreport:3.7.1' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
}
